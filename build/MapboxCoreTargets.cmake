# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.26)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS mbgl-core mapbox-base mapbox-base-cheap-ruler-cpp mapbox-base-extras-expected-lite mapbox-base-extras-kdbush.hpp mapbox-base-extras-rapidjson mapbox-base-geojson-vt-cpp mapbox-base-geojson.hpp mapbox-base-geometry.hpp mapbox-base-jni.hpp mapbox-base-pixelmatch-cpp mapbox-base-shelf-pack-cpp mapbox-base-supercluster.hpp mapbox-base-variant mbgl-compiler-options mbgl-vendor-boost mbgl-vendor-csscolorparser mbgl-vendor-earcut.hpp mbgl-vendor-eternal mbgl-vendor-parsedate mbgl-vendor-polylabel mbgl-vendor-protozero mbgl-vendor-unique_resource mbgl-vendor-vector-tile mbgl-vendor-wagyu mbgl-vendor-metal-cpp unordered_dense mbgl-vendor-nunicode mbgl-vendor-sqlite)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target mbgl-core
add_library(mbgl-core STATIC IMPORTED)

set_target_properties(mbgl-core PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MLN_LEGACY_RENDERER=\$<BOOL:ON>;MLN_DRAWABLE_RENDERER=\$<BOOL:OFF>;MLN_USE_UNORDERED_DENSE=\$<BOOL:ON>"
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/include;C:/Repos/dandan/maplibre-native/platform/default/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:mapbox-base-extras-kdbush.hpp>;\$<LINK_ONLY:mapbox-base-supercluster.hpp>;\$<LINK_ONLY:mapbox-base-shelf-pack-cpp>;\$<LINK_ONLY:mapbox-base-geojson-vt-cpp>;\$<LINK_ONLY:mapbox-base-cheap-ruler-cpp>;\$<LINK_ONLY:mbgl-compiler-options>;\$<LINK_ONLY:mbgl-vendor-boost>;\$<LINK_ONLY:mbgl-vendor-csscolorparser>;\$<LINK_ONLY:mbgl-vendor-earcut.hpp>;\$<LINK_ONLY:mbgl-vendor-eternal>;\$<LINK_ONLY:mbgl-vendor-parsedate>;\$<LINK_ONLY:mbgl-vendor-polylabel>;\$<LINK_ONLY:mbgl-vendor-protozero>;\$<LINK_ONLY:mbgl-vendor-unique_resource>;\$<LINK_ONLY:mbgl-vendor-vector-tile>;\$<LINK_ONLY:mbgl-vendor-wagyu>;\$<LINK_ONLY:\$<\$<BOOL:>:mbgl-vendor-metal-cpp>>;mapbox-base;mapbox-base-extras-expected-lite;mapbox-base-extras-rapidjson;mapbox-base-geojson.hpp;mapbox-base-geometry.hpp;mapbox-base-variant;\$<\$<BOOL:OFF>:TracyClient>;unordered_dense;\$<LINK_ONLY:OpenGL::GL>;\$<\$<NOT:\$<CONFIG:DEBUG>>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/lib/libcurl.lib>;\$<\$<CONFIG:DEBUG>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/debug/lib/libcurl-d.lib>;\$<LINK_ONLY:\$<LINK_ONLY:ws2_32>>;\$<LINK_ONLY:\$<LINK_ONLY:bcrypt>>;\$<\$<NOT:\$<CONFIG:DEBUG>>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/lib/zlib.lib>;\$<\$<CONFIG:DEBUG>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/debug/lib/zlibd.lib>;\$<LINK_ONLY:\$<LINK_ONLY:advapi32>>;\$<LINK_ONLY:\$<LINK_ONLY:crypt32>>;\$<\$<NOT:\$<CONFIG:DEBUG>>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/lib/jpeg.lib>;\$<\$<CONFIG:DEBUG>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/debug/lib/jpeg.lib>;\$<\$<NOT:\$<CONFIG:DEBUG>>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/lib/libwebpdecoder.lib>;\$<\$<CONFIG:DEBUG>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/debug/lib/libwebpdecoder.lib>;\$<\$<NOT:\$<CONFIG:DEBUG>>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/lib/libwebp.lib>;\$<\$<CONFIG:DEBUG>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/debug/lib/libwebp.lib>;\$<\$<NOT:\$<CONFIG:DEBUG>>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/lib/libwebpdemux.lib>;\$<\$<CONFIG:DEBUG>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/debug/lib/libwebpdemux.lib>;\$<\$<NOT:\$<CONFIG:DEBUG>>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/lib/libwebpmux.lib>;\$<\$<CONFIG:DEBUG>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/debug/lib/libwebpmux.lib>;\$<\$<NOT:\$<CONFIG:DEBUG>>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/lib/libsharpyuv.lib>;\$<\$<CONFIG:DEBUG>:C:/Repos/dandan/maplibre-native/platform/windows/vendor/vcpkg/installed/x64-windows/debug/lib/libsharpyuv.lib>;\$<LINK_ONLY:dlfcn-win32::dl>;\$<LINK_ONLY:\$<\$<NOT:\$<BOOL:>>:ICU::data>>;\$<LINK_ONLY:\$<\$<NOT:\$<BOOL:>>:ICU::i18n>>;\$<LINK_ONLY:\$<\$<NOT:\$<BOOL:>>:ICU::uc>>;\$<LINK_ONLY:\$<\$<BOOL:>:mbgl-vendor-icu>>;\$<LINK_ONLY:PNG::PNG>;\$<LINK_ONLY:mbgl-vendor-nunicode>;\$<LINK_ONLY:mbgl-vendor-sqlite>"
)

# Create imported target mapbox-base
add_library(mapbox-base INTERFACE IMPORTED)

set_target_properties(mapbox-base PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/include"
  INTERFACE_LINK_LIBRARIES "mapbox-base-extras-expected-lite;mapbox-base-geojson-vt-cpp;mapbox-base-geojson.hpp;mapbox-base-geometry.hpp;mapbox-base-jni.hpp;mapbox-base-pixelmatch-cpp;mapbox-base-shelf-pack-cpp;mapbox-base-supercluster.hpp;mapbox-base-variant;mapbox-base-cheap-ruler-cpp"
)

# Create imported target mapbox-base-cheap-ruler-cpp
add_library(mapbox-base-cheap-ruler-cpp INTERFACE IMPORTED)

set_target_properties(mapbox-base-cheap-ruler-cpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/deps/cheap-ruler-cpp/include"
)

# Create imported target mapbox-base-extras-expected-lite
add_library(mapbox-base-extras-expected-lite INTERFACE IMPORTED)

set_target_properties(mapbox-base-extras-expected-lite PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/extras/expected-lite/include"
)

# Create imported target mapbox-base-extras-kdbush.hpp
add_library(mapbox-base-extras-kdbush.hpp INTERFACE IMPORTED)

set_target_properties(mapbox-base-extras-kdbush.hpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/extras/kdbush.hpp/include"
)

# Create imported target mapbox-base-extras-rapidjson
add_library(mapbox-base-extras-rapidjson INTERFACE IMPORTED)

set_target_properties(mapbox-base-extras-rapidjson PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "RAPIDJSON_HAS_STDSTRING=1;RAPIDJSON_HAS_CXX11_RVALUE_REFS"
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/extras/rapidjson/include"
)

# Create imported target mapbox-base-geojson-vt-cpp
add_library(mapbox-base-geojson-vt-cpp INTERFACE IMPORTED)

set_target_properties(mapbox-base-geojson-vt-cpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/deps/geojson-vt-cpp/include"
)

# Create imported target mapbox-base-geojson.hpp
add_library(mapbox-base-geojson.hpp INTERFACE IMPORTED)

set_target_properties(mapbox-base-geojson.hpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/deps/geojson.hpp/include"
)

# Create imported target mapbox-base-geometry.hpp
add_library(mapbox-base-geometry.hpp INTERFACE IMPORTED)

set_target_properties(mapbox-base-geometry.hpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/deps/geometry.hpp/include"
)

# Create imported target mapbox-base-jni.hpp
add_library(mapbox-base-jni.hpp INTERFACE IMPORTED)

set_target_properties(mapbox-base-jni.hpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/deps/jni.hpp/include"
)

# Create imported target mapbox-base-pixelmatch-cpp
add_library(mapbox-base-pixelmatch-cpp INTERFACE IMPORTED)

set_target_properties(mapbox-base-pixelmatch-cpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/deps/pixelmatch-cpp/include"
)

# Create imported target mapbox-base-shelf-pack-cpp
add_library(mapbox-base-shelf-pack-cpp INTERFACE IMPORTED)

set_target_properties(mapbox-base-shelf-pack-cpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/deps/shelf-pack-cpp/include"
)

# Create imported target mapbox-base-supercluster.hpp
add_library(mapbox-base-supercluster.hpp INTERFACE IMPORTED)

set_target_properties(mapbox-base-supercluster.hpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/deps/supercluster.hpp/include"
)

# Create imported target mapbox-base-variant
add_library(mapbox-base-variant INTERFACE IMPORTED)

set_target_properties(mapbox-base-variant PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/mapbox-base/deps/variant/include"
)

# Create imported target mbgl-compiler-options
add_library(mbgl-compiler-options INTERFACE IMPORTED)

set_target_properties(mbgl-compiler-options PROPERTIES
  INTERFACE_COMPILE_OPTIONS "\$<\$<BOOL:OFF>:--coverage>;\$<\$<BOOL:OFF>:-DSANITIZE>;\$<\$<BOOL:OFF>:-fno-omit-frame-pointer>;\$<\$<BOOL:OFF>:-fno-optimize-sibling-calls>;\$<\$<STREQUAL:OFF,address>:-fsanitize=address>;\$<\$<STREQUAL:OFF,thread>:-fsanitize=thread>;\$<\$<STREQUAL:OFF,undefined>:-fsanitize=implicit-conversion,;-fsanitize-blacklist=C:/Repos/dandan/maplibre-native/scripts/ubsan.blacklist>;\$<\$<STREQUAL:OFF,undefined>:-fsanitize=undefined,;-fsanitize-blacklist=C:/Repos/dandan/maplibre-native/scripts/ubsan.blacklist>;\$<\$<STREQUAL:OFF,undefined>:-fsanitize=unsigned-integer-overflow,;-fsanitize-blacklist=C:/Repos/dandan/maplibre-native/scripts/ubsan.blacklist>;\$<\$<STREQUAL:OFF,undefined>:-fsanitize=nullability,;-fsanitize-blacklist=C:/Repos/dandan/maplibre-native/scripts/ubsan.blacklist>;\$<\$<STREQUAL:OFF,undefined>:-fsanitize=float-divide-by-zero,;-fsanitize-blacklist=C:/Repos/dandan/maplibre-native/scripts/ubsan.blacklist>;\$<\$<PLATFORM_ID:iOS>:-fembed-bitcode>;\$<\$<AND:\$<COMPILE_LANGUAGE:CXX>,\$<NOT:\$<OR:\$<BOOL:OFF>,\$<CXX_COMPILER_ID:MSVC>>>>:-fno-rtti>;\$<\$<AND:\$<COMPILE_LANGUAGE:CXX>,\$<NOT:\$<PLATFORM_ID:Windows>>>:-Wall>;\$<\$<AND:\$<COMPILE_LANGUAGE:CXX>,\$<NOT:\$<PLATFORM_ID:Windows>>>:-Wshadow>;\$<\$<AND:\$<COMPILE_LANGUAGE:CXX>,\$<NOT:\$<PLATFORM_ID:Windows>>>:-Wextra>;\$<\$<AND:\$<COMPILE_LANGUAGE:CXX>,\$<NOT:\$<PLATFORM_ID:Windows>>,\$<BOOL:ON>>:-Werror>;\$<\$<AND:\$<COMPILE_LANGUAGE:CXX>,\$<PLATFORM_ID:Android>>:-Wno-error=tautological-constant-compare>;\$<\$<CXX_COMPILER_ID:GNU>:-Wno-error=maybe-uninitialized>;\$<\$<CXX_COMPILER_ID:GNU>:-Wno-error=return-type>;\$<\$<CXX_COMPILER_ID:GNU>:-Wno-error=unknown-pragmas>;\$<\$<CXX_COMPILER_ID:GNU>:-Wno-error=pragmas>;\$<\$<CXX_COMPILER_ID:GNU>:-Wno-psabi>;\$<\$<CXX_COMPILER_ID:AppleClang>:-Wno-unknown-warning-option>;\$<\$<AND:\$<CXX_COMPILER_ID:AppleClang>,\$<NOT:\$<BOOL:OFF>>>:-Wno-error=deprecated-declarations>;\$<\$<AND:\$<CXX_COMPILER_ID:AppleClang>,\$<NOT:\$<BOOL:OFF>>>:-Wno-error=unused-parameter>;\$<\$<AND:\$<CXX_COMPILER_ID:AppleClang>,\$<NOT:\$<BOOL:OFF>>>:-Wno-error=unused-property-ivar>;\$<\$<CXX_COMPILER_ID:MSVC>:/utf-8>;\$<\$<CXX_COMPILER_ID:MSVC>:/WX>;\$<\$<CXX_COMPILER_ID:MSVC>:/EHsc>;\$<\$<CXX_COMPILER_ID:MSVC>:/wd4068>;\$<\$<CXX_COMPILER_ID:MSVC>:/D_USE_MATH_DEFINES>;\$<\$<AND:\$<NOT:\$<CXX_COMPILER_ID:MSVC>>,\$<PLATFORM_ID:Windows>>:-D_USE_MATH_DEFINES>;\$<\$<CXX_COMPILER_ID:MSVC>:/D_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS>;\$<\$<CXX_COMPILER_ID:MSVC>:/D_CRT_SECURE_NO_WARNINGS>;\$<\$<CXX_COMPILER_ID:MSVC>:/MP>"
  INTERFACE_LINK_LIBRARIES "\$<\$<BOOL:OFF>:--coverage>;\$<\$<STREQUAL:OFF,address>:-fsanitize=address>;\$<\$<STREQUAL:OFF,thread>:-fsanitize=thread>;\$<\$<STREQUAL:OFF,undefined>:-fsanitize=undefined>"
)

# Create imported target mbgl-vendor-boost
add_library(mbgl-vendor-boost INTERFACE IMPORTED)

set_target_properties(mbgl-vendor-boost PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/boost/include"
)

# Create imported target mbgl-vendor-csscolorparser
add_library(mbgl-vendor-csscolorparser STATIC IMPORTED)

set_target_properties(mbgl-vendor-csscolorparser PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/csscolorparser"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:mbgl-compiler-options>"
)

# Create imported target mbgl-vendor-earcut.hpp
add_library(mbgl-vendor-earcut.hpp INTERFACE IMPORTED)

set_target_properties(mbgl-vendor-earcut.hpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/earcut.hpp/include"
)

# Create imported target mbgl-vendor-eternal
add_library(mbgl-vendor-eternal INTERFACE IMPORTED)

set_target_properties(mbgl-vendor-eternal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/eternal/include"
)

# Create imported target mbgl-vendor-parsedate
add_library(mbgl-vendor-parsedate STATIC IMPORTED)

set_target_properties(mbgl-vendor-parsedate PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/parsedate"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:mbgl-compiler-options>"
)

# Create imported target mbgl-vendor-polylabel
add_library(mbgl-vendor-polylabel INTERFACE IMPORTED)

set_target_properties(mbgl-vendor-polylabel PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/polylabel/include"
)

# Create imported target mbgl-vendor-protozero
add_library(mbgl-vendor-protozero INTERFACE IMPORTED)

set_target_properties(mbgl-vendor-protozero PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/protozero/include"
)

# Create imported target mbgl-vendor-unique_resource
add_library(mbgl-vendor-unique_resource INTERFACE IMPORTED)

set_target_properties(mbgl-vendor-unique_resource PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/unique_resource"
)

# Create imported target mbgl-vendor-vector-tile
add_library(mbgl-vendor-vector-tile INTERFACE IMPORTED)

set_target_properties(mbgl-vendor-vector-tile PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/vector-tile/include"
)

# Create imported target mbgl-vendor-wagyu
add_library(mbgl-vendor-wagyu INTERFACE IMPORTED)

set_target_properties(mbgl-vendor-wagyu PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/wagyu/include"
)

# Create imported target mbgl-vendor-metal-cpp
add_library(mbgl-vendor-metal-cpp INTERFACE IMPORTED)

set_target_properties(mbgl-vendor-metal-cpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/metal-cpp"
)

# Create imported target unordered_dense
add_library(unordered_dense INTERFACE IMPORTED)

set_target_properties(unordered_dense PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/unordered_dense/include"
)

# Create imported target mbgl-vendor-nunicode
add_library(mbgl-vendor-nunicode STATIC IMPORTED)

set_target_properties(mbgl-vendor-nunicode PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/nunicode/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:mbgl-compiler-options>"
)

# Create imported target mbgl-vendor-sqlite
add_library(mbgl-vendor-sqlite STATIC IMPORTED)

set_target_properties(mbgl-vendor-sqlite PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Repos/dandan/maplibre-native/vendor/sqlite/include"
)

# Import target "mbgl-core" for configuration "Debug"
set_property(TARGET mbgl-core APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(mbgl-core PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "C:/Repos/dandan/maplibre-native/build/Debug/mbgl-core.lib"
  )

# Import target "mbgl-vendor-csscolorparser" for configuration "Debug"
set_property(TARGET mbgl-vendor-csscolorparser APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(mbgl-vendor-csscolorparser PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "C:/Repos/dandan/maplibre-native/build/Debug/mbgl-vendor-csscolorparser.lib"
  )

# Import target "mbgl-vendor-parsedate" for configuration "Debug"
set_property(TARGET mbgl-vendor-parsedate APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(mbgl-vendor-parsedate PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "C:/Repos/dandan/maplibre-native/build/Debug/mbgl-vendor-parsedate.lib"
  )

# Import target "mbgl-vendor-nunicode" for configuration "Debug"
set_property(TARGET mbgl-vendor-nunicode APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(mbgl-vendor-nunicode PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C"
  IMPORTED_LOCATION_DEBUG "C:/Repos/dandan/maplibre-native/build/Debug/mbgl-vendor-nunicode.lib"
  )

# Import target "mbgl-vendor-sqlite" for configuration "Debug"
set_property(TARGET mbgl-vendor-sqlite APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(mbgl-vendor-sqlite PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C"
  IMPORTED_LOCATION_DEBUG "C:/Repos/dandan/maplibre-native/build/Debug/mbgl-vendor-sqlite.lib"
  )

# Import target "mbgl-core" for configuration "Release"
set_property(TARGET mbgl-core APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(mbgl-core PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "C:/Repos/dandan/maplibre-native/build/Release/mbgl-core.lib"
  )

# Import target "mbgl-vendor-csscolorparser" for configuration "Release"
set_property(TARGET mbgl-vendor-csscolorparser APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(mbgl-vendor-csscolorparser PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "C:/Repos/dandan/maplibre-native/build/Release/mbgl-vendor-csscolorparser.lib"
  )

# Import target "mbgl-vendor-parsedate" for configuration "Release"
set_property(TARGET mbgl-vendor-parsedate APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(mbgl-vendor-parsedate PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "C:/Repos/dandan/maplibre-native/build/Release/mbgl-vendor-parsedate.lib"
  )

# Import target "mbgl-vendor-nunicode" for configuration "Release"
set_property(TARGET mbgl-vendor-nunicode APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(mbgl-vendor-nunicode PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "C:/Repos/dandan/maplibre-native/build/Release/mbgl-vendor-nunicode.lib"
  )

# Import target "mbgl-vendor-sqlite" for configuration "Release"
set_property(TARGET mbgl-vendor-sqlite APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(mbgl-vendor-sqlite PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "C:/Repos/dandan/maplibre-native/build/Release/mbgl-vendor-sqlite.lib"
  )

# Import target "mbgl-core" for configuration "MinSizeRel"
set_property(TARGET mbgl-core APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)
set_target_properties(mbgl-core PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_MINSIZEREL "CXX"
  IMPORTED_LOCATION_MINSIZEREL "C:/Repos/dandan/maplibre-native/build/MinSizeRel/mbgl-core.lib"
  )

# Import target "mbgl-vendor-csscolorparser" for configuration "MinSizeRel"
set_property(TARGET mbgl-vendor-csscolorparser APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)
set_target_properties(mbgl-vendor-csscolorparser PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_MINSIZEREL "CXX"
  IMPORTED_LOCATION_MINSIZEREL "C:/Repos/dandan/maplibre-native/build/MinSizeRel/mbgl-vendor-csscolorparser.lib"
  )

# Import target "mbgl-vendor-parsedate" for configuration "MinSizeRel"
set_property(TARGET mbgl-vendor-parsedate APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)
set_target_properties(mbgl-vendor-parsedate PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_MINSIZEREL "CXX"
  IMPORTED_LOCATION_MINSIZEREL "C:/Repos/dandan/maplibre-native/build/MinSizeRel/mbgl-vendor-parsedate.lib"
  )

# Import target "mbgl-vendor-nunicode" for configuration "MinSizeRel"
set_property(TARGET mbgl-vendor-nunicode APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)
set_target_properties(mbgl-vendor-nunicode PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_MINSIZEREL "C"
  IMPORTED_LOCATION_MINSIZEREL "C:/Repos/dandan/maplibre-native/build/MinSizeRel/mbgl-vendor-nunicode.lib"
  )

# Import target "mbgl-vendor-sqlite" for configuration "MinSizeRel"
set_property(TARGET mbgl-vendor-sqlite APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)
set_target_properties(mbgl-vendor-sqlite PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_MINSIZEREL "C"
  IMPORTED_LOCATION_MINSIZEREL "C:/Repos/dandan/maplibre-native/build/MinSizeRel/mbgl-vendor-sqlite.lib"
  )

# Import target "mbgl-core" for configuration "RelWithDebInfo"
set_property(TARGET mbgl-core APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(mbgl-core PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELWITHDEBINFO "CXX"
  IMPORTED_LOCATION_RELWITHDEBINFO "C:/Repos/dandan/maplibre-native/build/RelWithDebInfo/mbgl-core.lib"
  )

# Import target "mbgl-vendor-csscolorparser" for configuration "RelWithDebInfo"
set_property(TARGET mbgl-vendor-csscolorparser APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(mbgl-vendor-csscolorparser PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELWITHDEBINFO "CXX"
  IMPORTED_LOCATION_RELWITHDEBINFO "C:/Repos/dandan/maplibre-native/build/RelWithDebInfo/mbgl-vendor-csscolorparser.lib"
  )

# Import target "mbgl-vendor-parsedate" for configuration "RelWithDebInfo"
set_property(TARGET mbgl-vendor-parsedate APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(mbgl-vendor-parsedate PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELWITHDEBINFO "CXX"
  IMPORTED_LOCATION_RELWITHDEBINFO "C:/Repos/dandan/maplibre-native/build/RelWithDebInfo/mbgl-vendor-parsedate.lib"
  )

# Import target "mbgl-vendor-nunicode" for configuration "RelWithDebInfo"
set_property(TARGET mbgl-vendor-nunicode APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(mbgl-vendor-nunicode PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELWITHDEBINFO "C"
  IMPORTED_LOCATION_RELWITHDEBINFO "C:/Repos/dandan/maplibre-native/build/RelWithDebInfo/mbgl-vendor-nunicode.lib"
  )

# Import target "mbgl-vendor-sqlite" for configuration "RelWithDebInfo"
set_property(TARGET mbgl-vendor-sqlite APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(mbgl-vendor-sqlite PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELWITHDEBINFO "C"
  IMPORTED_LOCATION_RELWITHDEBINFO "C:/Repos/dandan/maplibre-native/build/RelWithDebInfo/mbgl-vendor-sqlite.lib"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
